@model Evidence_01.Models.ViewModels.PlayersViewModel
@{
    ViewBag.Title = "Edit";
}

<div class="row mt-5">
    <div class="col">
        @using (Html.BeginForm("Edit", "Players", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken();
            <h2>Edit Player</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PlayerId)
            @Html.HiddenFor(model => model.PicturePath)
            <div class="form-group row">
                @Html.LabelFor(model => model.PlayerName, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PlayerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlayerName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Grade, "----Select one----", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.SportsId, "SportsId", htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SportsId, ViewBag.Sports as SelectList, "----Select one----", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SportsId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.JoinDate, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JoinDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Picture, new { @class = "form-control", type = "file" })
                    @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">

                <div class="col-md-offset-2 col-md-10">
                    <input type="reset" class="btn btn-secondary" value="Reset Values" />
                    <input type="submit" class="btn btn-primary" value="Update data" />
                </div>
            </div>
        }
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-info" })
</div>



